断断续续学习了Python半年了，中途踩过很多的坑。突然看到了一句show me the code
感觉自己看过的书的代码保存都非常之乱，现在准备把看过的书的习题代码重构一遍，顺便记录一下遇到的坑

使用的第一本Python入门书籍是：python从入门到实践，在异步社区有电子版
由于自己有kindle，并且没有太多的空间放纸质书，所以选择了电子书，在其中踩了不少的坑
这本书的第一部分感觉很适合初学者，本科的时候开课学过一点VB，业余自己学了点C语言，了解了
一些编程语言的基本概念，写出来的也只是计算器只能功能的小程序，根本没什么用，并且这些用EXCEL
计算会有更高的效率。
总结来说，我和没有编程基础差不多。实现第二部分可视化的代码后你会发现，目前Python的受欢迎程度
相当高，有人气，而且开源轮子多，很多东西没有必要自己造轮子

Python从入门到实践的代码除了外星人入侵项目的其他代码几乎全部实现了一遍
为什么说几乎呢，因为在这个过程中只靠书中的内容完全没办法自己实现一遍第二部分的项目，
但是不可否认，第一部分的基础内容对入门者很友好，把Python的学习难度降低了很多。

列举一些我在练习时遇到的坑：
第一部分对我来说实现的很顺利，可能是有点c基础吧，主要遇到的问题就是敲错代码。每个单元的练习
花点时间想一下就可以写出代码。
第二部分对初学者非常不友好，比如可视化github上各语言的项目star数量可视话，如果你只是跟
着敲代码会遇到一些无法解决的问题，比如:在使用循环的遍历前20名项目的信息时需要增加if语句
检查信息是否有效，书籍上的原代码是没有检查项目的信息是否有效的：show you code
for repo_dict in repo_dicts:
	names.append(repo_dict['name'])
	
	if repo_dict['description']:
		plot_dict = {
			'value':repo_dict['stargazers_count'],
			'label':repo_dict['description'],
			'xlink':repo_dict['html_url'],
			}
		plot_dicts.append(plot_dict)
	else:
		plot_dict={
			'value':repo_dict['stargazers_count'],
			'label':'miaoshuweikong', #no description 
			'xlink':repo_dict['html_url'],
			}

第三部分使用django实现一个网站项目对包依赖关系有要求，而这个书上没有讲安装的django版本应该
为1.8.4，应该执行命令：pip install django==1.8.4
否则会出现书上的代码根本不能执行，而1.8.4已经不在维护，所以作为练习还是不错。
还有一个静态文件保存问题，我现在还没找到setting.py的正确写法，因为我安装书上bootstrap
版本，直接敲代码进去也没有解决，最终我跳过了前端优化，直接部署网站到heroku
这部分最重要的我个人觉得是使用Linux来开发网站，否则你没有办法在本地运行你的网站进行除错
而我看过一遍鸟哥的私房菜第四版，但是我用的是ubuntu18.04作为开发环境，centos的包依赖
关系让人抓狂，我编译了python3之后在安装pip的时候被包依赖关系给搞了俩天，最终还是没有解决
而ubuntu在国内的使用人群比较多，能查到的解决方案也很多（因为我是直接实现第三部分，而我
掌握访问Google的能力是在我写完第二部分之后获得的），在第二部分的可视化golang项目排名前20
的项目里我找到了访问Google的方法，并将写的网站部署到了heroku
在实现第三部分的内容时，我在知乎的帖子里看到了freecodecamp这个项目，然后在里面学了HTML
和一点CSS之后这个网站就被墙了，到底发生了什么我也不懂，但是在我实现第二部分的可视话之后对
我的正常访问没有影响。

第一部分的外星人入侵我并没有实现，因为我对游戏的兴趣不大。

以下是书籍之外我觉得重要的一些内容：
最后在中途我使用网易云的可汗学院语法课程重新学了一遍美式英语语法，然后在去可汗学院英文官网
做练习的时候网速非常卡，练习做了95%之后就已经可以阅读英文文献，当然，还是要经常查字典的，
在这半年间看了Mastering Regular Expressions,  - Jeffrey E. F. Friedl
中文版叫：精通正则表达式，因为后六章所实现的语言不是我要学的python所以只看了前六章
现在是能够阅读别人代码中的正则表达时，运用不是很熟练

在获得英语阅读能力之后，程序除错的效率很高，因为我突然发现，解释器会直接告诉你代码出错的
原因和内容，然后能够去stacflow找一些问题的解决问题

总结我一下我半年的学习内容：
Python从入门到实践
	第一部分适合基础差或者没有基础，第二部分建议先实现数据可视化，外星人入侵我没有实现不做
	评价，第三部分使用django写网站，建议先学以下linux命令行，freecodecamp学习html之后
	再实现。至少你得再虚拟机里安装一种Linux发行版本（建议ubuntu），或者你的电脑是macOS也行
	，还有如果你不知道科学上网，你是没有办法部署到heroku服务器上的
学完Python入门到实践第一部分，可以写一下Python编程快速上手-让繁琐工作自动化
	写一下里面的小项目，获得一下成就感，然后再开始我有Python从入门到实践第二部分的项目
	，第二部分的项目对于初学着的难度确实太高了，如果不是有人指导，不建议直接实现，会打击自信心的
	
linux命令行
	中文版，英文版都ok
	
git
	一个版本控制系统
	这个我没有提到，这个是我学完Python入门到实践才学的
	建议廖雪峰网站的git入门教程
	然后可以直接看git官网的progit，有中文版，有能力建议看英文
	管理代码是真的方便
	官方文档说其实还可以用来管doc文件的，只是需要自己配置一下
	
鸟哥的私房菜第四版
	建议那centos来练习书中的内容，新手不要用来做Python开发环境，pip安装问题搞了我两天
	现在都没有解决，联系之后再转到ubuntu之后会发现ubuntu比centos的包依赖关系解决速度
	快很多
	
目前看的书就这么多，现在打算把这些书的练习代码重构一份，show you the code!
目前写过的项目：
	1.Python从入门到实践第二部分使用django1.8.4实现了一个小破站，没有前端，
	并且还有一些bug，不过算是了解了网站开发流程
	2.按时间间隔从视频中提取视频截图，并打包成可执行程序，可以开箱即用，写出来的是我还在
	想我能不能拿这个东西去赚钱，后面发现了一个开源的项目ffmpeg，原来自己只是个弟弟haha
	3.Python从入门到实践第二部分的github各语言star前20名项目可视化，这个项目让我得到
	了科学上网的能力，能够解决更多的编程问题
如果你也在用上面的书遇到了问题可以，如果网上搜不到，确定代码没有码错，可以提issue。

重构之后开始看postgreSQL,因为heroku用的就是postgre，而且heroku，每个月有免费部署时间
这些时间够我练习了。

目前的想法是看书和上freecodecamp学前端和看书学SQL

至于我的外文书怎么来的，你可以试试https://b-ok.org/
当然提醒一句支持正版，逼不得已的情况下，可以先上车后买票吗，给这些写出好书的作者一些鼓励
买书之前最好在网络上试读一下，看适不适合自己，因为我曾经被人推荐一本书说多好多好，结果买
回来之后看了几页我想把书撕了，在我的眼里那就是本垃圾书。最后让我对这个朋友的想法发生很大变化
，所以之前最好先想办法找个试读版本。本文推荐的书，请先找个试读版试读一下，再考虑买不买。

国内的计算机书籍类网站推荐：异步社区和图灵社区
我发现c++ primer plus这本书1000页的翻译本价格还不如400-500页的Python，C++的难度果然不
一般，入坑的人少，Python的需求比较大，所以价格高？

如果你还在读本科一二年级在学高数，如果数学不是很好，我劝你入门千万别用同济版高数，难度太高
可以试试下面这两本：
	微积分之屠龙宝刀
	微积分之倚天宝剑
	虽然翻译有点问题，但是个人感觉影响不大，重要的是这本书对初学者比较友好
想深入研究的话可以看微积分学教程，一共三本：
	很厚，我只看了一本，但用李云龙的话来说作者：真他娘的是个人才，这本书真他娘的优秀！

线性代数这个推荐一本
	线性代数及其应用
	英文名：Linear Algebra and Its Applications(Gilbert Strang)
	目前我手上有一本英文第四版和一本1990南开中译本，有点难度，但是比课本好
	或者你去知乎搜一下其他书，反正不推荐学校发的
	
概率论与数理统计
	去知乎搜吧，我搜了几本，但是没真打开看过，所以没资格推荐，反正不推荐学校发的
	
上面这三个学科真的很重要和英语真的很重要，没打好基础后面会很痛苦的

	
